# ________             _____               __________                   ________            _____________      __________                   ___       __           ____________                 
# ____  _/________________(_)______ ______ __  /___(_)____________      ___  __ \_________________  /__(_)_______  /___(_)____________      __ |     / /_____ ________(_)__    |_______________ 
#  __  / __  ___/_  ___/_  /__  __ `/  __ `/  __/_  /_  __ \_  __ \     __  /_/ /_  ___/  _ \  __  /__  /_  ___/  __/_  /_  __ \_  __ \     __ | /| / /_  __ `/__  /_  /__  /| |__  __ \__  __ \
# __/ /  _  /   _  /   _  / _  /_/ // /_/ // /_ _  / / /_/ /  / / /     _  ____/_  /   /  __/ /_/ / _  / / /__ / /_ _  / / /_/ /  / / /     __ |/ |/ / / /_/ /__  /_  / _  ___ |_  /_/ /_  /_/ /
# /___/  /_/    /_/    /_/  _\__, / \__,_/ \__/ /_/  \____//_/ /_/      /_/     /_/    \___/\__,_/  /_/  \___/ \__/ /_/  \____//_/ /_/      ____/|__/  \__,_/ _____/_/  /_/  |_|  .___/_  .___/ 
#                           /____/                                                                                                                                             /_/     /_/      

# .env
# Choose one of the following configuration and comment the other two options

# Configuration for PRODUCTION (run as WaziApp)
API_URL="http://wazigate/"
Proxy_URL=/var/lib/waziapp/proxy.sock

# Configuration for DEBUG (runs on PC) and fetch data from local gateway (change IP accordingly)
# API_URL="http://192.168.188.29/"
#API_URL="http://192.168.0.6/"
# API_URL="http://wazigate.local" # If there is only one wazigate in the local subnetwork
# Proxy_URL=proxy.sock

# Configuration for DEBUG (runs on PC) and fetch data from debug environment (change PORT accordingly)
API_URL="http://localhost:8080/"
Proxy_URL=proxy.sock

## How to obtain data: sensor dataset and prediction data
# Load sensor data from local file
# if true, load sensor data from static file
LOAD_DATA_FROM_CSV = "False"
# if true, load dataset data from static file     
SKIP_DATA_PREPROCESSING = "True"
# if true, load predictions from static file
SLIP_TRAINING = "True"
# kind of redundant, but automatically saves and loads former results of predictions
PERFORM_TRAINING = "True"



# 1) TODO: loadstuff in settings or loadstuff_remote in settings!!!
# 2) remove also model restriction, which was set for debug in: def create_and_compare_model_reg(train): and also for NNs
# 3) also set Perform_training in main to True, set parameters right for tuning
# 4) remove "use_pycaret" flag
# 4) Look for all DEBUG tags!!